/*
 * kabuステーションAPI
 * # 定義情報   REST APIのコード一覧、エンドポイントは下記リンク参照     - [REST APIコード一覧](../ptal/error.html)
 *
 * OpenAPI spec version: 1.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.RequestRegisterSymbols;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * RequestUnregister
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-09-20T16:10:10.621Z[GMT]")
public class RequestUnregister {
  @SerializedName("Symbols")
  private List<RequestRegisterSymbols> symbols = null;

  public RequestUnregister symbols(List<RequestRegisterSymbols> symbols) {
    this.symbols = symbols;
    return this;
  }

  public RequestUnregister addSymbolsItem(RequestRegisterSymbols symbolsItem) {
    if (this.symbols == null) {
      this.symbols = new ArrayList<RequestRegisterSymbols>();
    }
    this.symbols.add(symbolsItem);
    return this;
  }

   /**
   * ※為替銘柄を登録する場合、銘柄名は\&quot;通貨A\&quot; + \&quot;/\&quot; + \&quot;通貨B\&quot;、市場コードは\&quot;300\&quot;で指定してください。 例：&#x27;Symbol&#x27;: &#x27;EUR/USD&#x27;, \&quot;Exchange\&quot;: 300
   * @return symbols
  **/
  @Schema(description = "※為替銘柄を登録する場合、銘柄名は\"通貨A\" + \"/\" + \"通貨B\"、市場コードは\"300\"で指定してください。 例：'Symbol': 'EUR/USD', \"Exchange\": 300")
  public List<RequestRegisterSymbols> getSymbols() {
    return symbols;
  }

  public void setSymbols(List<RequestRegisterSymbols> symbols) {
    this.symbols = symbols;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestUnregister requestUnregister = (RequestUnregister) o;
    return Objects.equals(this.symbols, requestUnregister.symbols);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbols);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestUnregister {\n");
    
    sb.append("    symbols: ").append(toIndentedString(symbols)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
