/*
 * kabuステーションAPI
 * # 定義情報   REST APIのコード一覧、エンドポイントは下記リンク参照     - [REST APIコード一覧](../ptal/error.html)
 *
 * OpenAPI spec version: 1.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.WalletCashSuccess;
import io.swagger.client.model.WalletFutureSuccess;
import io.swagger.client.model.WalletMarginSuccess;
import io.swagger.client.model.WalletOptionSuccess;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for WalletApi
 */
@Ignore
public class WalletApiTest {

    private final WalletApi api = new WalletApi();

    /**
     * 取引余力（現物）
     *
     * 口座の取引余力（現物）を取得します
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void walletCashGetTest() throws Exception {
        String X_API_KEY = null;
        WalletCashSuccess response = api.walletCashGet(X_API_KEY);

        // TODO: test validations
    }
    /**
     * 取引余力（現物）（銘柄指定）
     *
     * 指定した銘柄の取引余力（現物）を取得します
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void walletCashSymbolGetTest() throws Exception {
        String X_API_KEY = null;
        String symbol = null;
        WalletCashSuccess response = api.walletCashSymbolGet(X_API_KEY, symbol);

        // TODO: test validations
    }
    /**
     * 取引余力（先物）
     *
     * 口座の取引余力（先物）を取得します
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void walletFutureGetTest() throws Exception {
        String X_API_KEY = null;
        WalletFutureSuccess response = api.walletFutureGet(X_API_KEY);

        // TODO: test validations
    }
    /**
     * 取引余力（先物）（銘柄指定）
     *
     * 指定した銘柄の取引余力（先物）を取得します
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void walletFutureSymbolGetTest() throws Exception {
        String X_API_KEY = null;
        String symbol = null;
        WalletFutureSuccess response = api.walletFutureSymbolGet(X_API_KEY, symbol);

        // TODO: test validations
    }
    /**
     * 取引余力（信用）
     *
     * 口座の取引余力（信用）を取得します
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void walletMarginGetTest() throws Exception {
        String X_API_KEY = null;
        WalletMarginSuccess response = api.walletMarginGet(X_API_KEY);

        // TODO: test validations
    }
    /**
     * 取引余力（信用）（銘柄指定）
     *
     * 指定した銘柄の取引余力（信用）を取得します
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void walletMarginSymbolGetTest() throws Exception {
        String X_API_KEY = null;
        String symbol = null;
        WalletMarginSuccess response = api.walletMarginSymbolGet(X_API_KEY, symbol);

        // TODO: test validations
    }
    /**
     * 取引余力（オプション）
     *
     * 口座の取引余力（オプション）を取得します
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void walletOptionGetTest() throws Exception {
        String X_API_KEY = null;
        WalletOptionSuccess response = api.walletOptionGet(X_API_KEY);

        // TODO: test validations
    }
    /**
     * 取引余力（オプション）（銘柄指定）
     *
     * 指定した銘柄の取引余力（オプション）を取得します
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void walletOptionSymbolGetTest() throws Exception {
        String X_API_KEY = null;
        String symbol = null;
        WalletOptionSuccess response = api.walletOptionSymbolGet(X_API_KEY, symbol);

        // TODO: test validations
    }
}
